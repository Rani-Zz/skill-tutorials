class Solution {
public:
    /**
    *每次把1左移一位，与n做位与运算
    *相当于从右向左每次比较一位，32位的话比较32次
    *更好的方法：n只要不是0，他的二进制表示一定为是1，n-1后，右边起第一位是0的变成1,1的位变成0，其他不变
    *(n-1)再和n做位与运算，右边变成1的位又可以变回0，这样n-1找到第一个为1的位，变回去继续找下一个为1的位
    */
     int  NumberOf1(int n) {
         int count = 0;
         while(n)
         {
             count++;
             n = (n-1)&n;
         }
         return count;
     }
};